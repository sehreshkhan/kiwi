{"ast":null,"code":"var _jsxFileName = \"/Users/Haider/Desktop/react-projects/KIWI/kiwifrontend/src/components/doors.jsx\";\nimport react from \"react\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Doors extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      alldoors: [{\n        id: 0,\n        name: \"front Door\",\n        address: \"Islamabad\",\n        time: \"10pm\"\n      }]\n    };\n\n    this.fetchImage = () => {\n      const requestOptions = {\n        method: \"GET\",\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"http://\" + host + \":\" + port + \"/get_data\", requestOptions).then(response => response.json()).then(result => {\n        setMeta({\n          meta: result.map(item => ({\n            panoid: item[0],\n            month: item[1],\n            idx: item[2],\n            angle: item[3],\n            head: item[4],\n            cluster: item[5],\n            pp: item[6],\n            pp_float: item[8]\n          }))\n        });\n      });\n    };\n  }\n\n  render() {\n    const doors = this.state.alldoors;\n    if (doors.length === 0) return /*#__PURE__*/_jsxDEV(react.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Doors to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"byee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Showing \", doors.length, \" movies from Database\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: doors.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: d.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: d.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: d.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.handleDetail(d._id),\n                className: \"btn btn-danger\",\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, d._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Doors;","map":{"version":3,"sources":["/Users/Haider/Desktop/react-projects/KIWI/kiwifrontend/src/components/doors.jsx"],"names":["react","React","Component","Doors","state","alldoors","id","name","address","time","fetchImage","requestOptions","method","header","fetch","host","port","then","response","json","result","setMeta","meta","map","item","panoid","month","idx","angle","head","cluster","pp","pp_float","render","doors","length","d","handleDetail","_id"],"mappings":"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","sourcesContent":["import react from \"react\";\nimport React, { Component } from \"react\";\n\nclass Doors extends Component {\n  state = {\n    alldoors: [\n      { id: 0, name: \"front Door\", address: \"Islamabad\", time: \"10pm\" },\n    ],\n  };\n  render() {\n    const doors = this.state.alldoors;\n    if (doors.length === 0)\n      return (\n        <react.Fragment>\n          <h2>No Doors to display</h2>\n          <h2>byee</h2>\n        </react.Fragment>\n      );\n    return (\n      <div>\n        <h2>Showing {doors.length} movies from Database</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Time</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {doors.map((d) => (\n              <tr key={d._id}>\n                <th>{d.name}</th>\n                <th>{d.address}</th>\n                <th>{d.time}</th>\n\n                <th>\n                  <button\n                    onClick={() => this.handleDetail(d._id)}\n                    className=\"btn btn-danger\"\n                  >\n                    Details\n                  </button>\n                </th>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  fetchImage = () => {\n    const requestOptions = {\n      method: \"GET\",\n      header: { \"Content-Type\": \"application/json\" },\n    };\n    fetch(\"http://\" + host + \":\" + port + \"/get_data\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        setMeta({\n          meta: result.map((item) => ({\n            panoid: item[0],\n            month: item[1],\n            idx: item[2],\n            angle: item[3],\n            head: item[4],\n            cluster: item[5],\n            pp: item[6],\n            pp_float: item[8],\n          })),\n        });\n      });\n  };\n}\n\nexport default Doors;\n"]},"metadata":{},"sourceType":"module"}