{"ast":null,"code":"var _jsxFileName = \"/Users/Haider/Desktop/react-projects/KIWI/kiwifrontend/src/components/door.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Door extends Component {\n  constructor() {\n    super(...arguments);\n    this.userId = this.props.match.params.id;\n    this.state = {\n      door: {},\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDoorData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", this.state.door.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  async fetchDoorData() {\n    try {\n      const result = await axios.get(`http://127.0.0.1:5000/doors/${this.userId}`);\n\n      if (result.status === 200) {\n        const currentDoor = result.data.door;\n        const door = {\n          id: currentDoor[0],\n          name: currentDoor[1],\n          dateTime: currentDoor[2],\n          address: `${currentDoor[4]}, ${currentDoor[5]}, ${currentDoor[6]}, ${currentDoor[7]}, ${currentDoor[8]}`\n        };\n        console.log(currentDoor);\n        const currentUsers = result.data.users.map(user => ({\n          id: user[0],\n          email: user[1],\n          firstName: user[2],\n          lastName: user[3],\n          createdAt: user[4]\n        }));\n        this.setState({\n          door: door,\n          users: currentUsers\n        });\n      }\n    } catch (error) {\n      console.log(\"Could not fetch doors at this time:\", error);\n    }\n  }\n\n}\n\nexport default Door;","map":{"version":3,"sources":["/Users/Haider/Desktop/react-projects/KIWI/kiwifrontend/src/components/door.jsx"],"names":["React","Component","axios","Door","userId","props","match","params","id","state","door","users","componentDidMount","fetchDoorData","render","name","result","get","status","currentDoor","data","dateTime","address","console","log","currentUsers","map","user","email","firstName","lastName","createdAt","setState","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,MAD2B,GAClB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EADN;AAAA,SAG3BC,KAH2B,GAGnB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE;AAFD,KAHmB;AAAA;;AAO3BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,sBAAO,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEkB,QAAbF,aAAa,GAAG;AACpB,QAAI;AACF,YAAMG,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAN,CAClB,+BAA8B,KAAKb,MAAO,EADxB,CAArB;;AAGA,UAAIY,MAAM,CAACE,MAAP,KAAkB,GAAtB,EAA2B;AACzB,cAAMC,WAAW,GAAGH,MAAM,CAACI,IAAP,CAAYV,IAAhC;AACA,cAAMA,IAAI,GAAG;AACXF,UAAAA,EAAE,EAAEW,WAAW,CAAC,CAAD,CADJ;AAEXJ,UAAAA,IAAI,EAAEI,WAAW,CAAC,CAAD,CAFN;AAGXE,UAAAA,QAAQ,EAAEF,WAAW,CAAC,CAAD,CAHV;AAIXG,UAAAA,OAAO,EAAG,GAAEH,WAAW,CAAC,CAAD,CAAI,KAAIA,WAAW,CAAC,CAAD,CAAI,KAAIA,WAAW,CAAC,CAAD,CAAI,KAAIA,WAAW,CAAC,CAAD,CAAI,KAAIA,WAAW,CAAC,CAAD,CAAI;AAJ5F,SAAb;AAMAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,cAAMM,YAAY,GAAGT,MAAM,CAACI,IAAP,CAAYT,KAAZ,CAAkBe,GAAlB,CAAuBC,IAAD,KAAW;AACpDnB,UAAAA,EAAE,EAAEmB,IAAI,CAAC,CAAD,CAD4C;AAEpDC,UAAAA,KAAK,EAAED,IAAI,CAAC,CAAD,CAFyC;AAGpDE,UAAAA,SAAS,EAAEF,IAAI,CAAC,CAAD,CAHqC;AAIpDG,UAAAA,QAAQ,EAAEH,IAAI,CAAC,CAAD,CAJsC;AAKpDI,UAAAA,SAAS,EAAEJ,IAAI,CAAC,CAAD;AALqC,SAAX,CAAtB,CAArB;AAOA,aAAKK,QAAL,CAAc;AAAEtB,UAAAA,IAAI,EAAEA,IAAR;AAAcC,UAAAA,KAAK,EAAEc;AAArB,SAAd;AACD;AACF,KAtBD,CAsBE,OAAOQ,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDS,KAAnD;AACD;AACF;;AAxC0B;;AA2C7B,eAAe9B,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport axios from \"axios\";\n\nclass Door extends Component {\n  userId = this.props.match.params.id;\n\n  state = {\n    door: {},\n    users: [],\n  };\n  componentDidMount() {\n    this.fetchDoorData();\n  }\n  render() {\n    return <div> {this.state.door.name}</div>;\n  }\n\n  async fetchDoorData() {\n    try {\n      const result = await axios.get(\n        `http://127.0.0.1:5000/doors/${this.userId}`\n      );\n      if (result.status === 200) {\n        const currentDoor = result.data.door;\n        const door = {\n          id: currentDoor[0],\n          name: currentDoor[1],\n          dateTime: currentDoor[2],\n          address: `${currentDoor[4]}, ${currentDoor[5]}, ${currentDoor[6]}, ${currentDoor[7]}, ${currentDoor[8]}`,\n        };\n        console.log(currentDoor);\n        const currentUsers = result.data.users.map((user) => ({\n          id: user[0],\n          email: user[1],\n          firstName: user[2],\n          lastName: user[3],\n          createdAt: user[4],\n        }));\n        this.setState({ door: door, users: currentUsers });\n      }\n    } catch (error) {\n      console.log(\"Could not fetch doors at this time:\", error);\n    }\n  }\n}\n\nexport default Door;\n"]},"metadata":{},"sourceType":"module"}