{"ast":null,"code":"var _jsxFileName = \"/Users/Haider/Desktop/react-projects/KIWI/kiwifrontend/src/components/door.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Door extends Component {\n  constructor() {\n    super(...arguments);\n    this.userId = this.props.match.params.id;\n    this.state = {\n      door: {},\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDoorData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-white bg-dark mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: this.state.door.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"ID: \", this.state.door.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Sensor UUID: \", this.state.door.id, \"Address: \", this.state.door.id, \"Date Tsxcfsime: \", this.state.door.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  async fetchDoorData() {\n    try {\n      const result = await axios.get(`http://127.0.0.1:5000/doors/${this.userId}`);\n\n      if (result.status === 200) {\n        const currentDoor = result.data.door[0];\n        console.log(currentDoor[0]);\n        const door = {\n          id: currentDoor[0],\n          name: currentDoor[1],\n          dateTime: currentDoor[2],\n          address: `${currentDoor[4]}, ${currentDoor[5]}, ${currentDoor[6]}, ${currentDoor[7]}, ${currentDoor[8]}`\n        };\n        const users = result.data.users.map(user => ({\n          id: user[0],\n          email: user[1],\n          firstName: user[2],\n          lastName: user[3],\n          createdAt: user[4]\n        }));\n        this.setState({\n          door,\n          users\n        });\n      }\n    } catch (error) {\n      console.log(\"Could not fetch doors at this time:\", error);\n    }\n  }\n\n}\n\nexport default Door;","map":{"version":3,"sources":["/Users/Haider/Desktop/react-projects/KIWI/kiwifrontend/src/components/door.jsx"],"names":["React","Component","axios","Door","userId","props","match","params","id","state","door","users","componentDidMount","fetchDoorData","render","name","result","get","status","currentDoor","data","console","log","dateTime","address","map","user","email","firstName","lastName","createdAt","setState","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,MAD2B,GAClB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EADN;AAAA,SAE3BC,KAF2B,GAEnB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE;AAFD,KAFmB;AAAA;;AAM3BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8B,KAAKL,KAAL,CAAWC,IAAX,CAAgBK;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,6BAAgC,KAAKN,KAAL,CAAWC,IAAX,CAAgBF,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,sCACgB,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,EADhC,eAEY,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,EAF5B,sBAGmB,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,EAHnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAEkB,QAAbK,aAAa,GAAG;AACpB,QAAI;AACF,YAAMG,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAN,CAClB,+BAA8B,KAAKb,MAAO,EADxB,CAArB;;AAGA,UAAIY,MAAM,CAACE,MAAP,KAAkB,GAAtB,EAA2B;AACzB,cAAMC,WAAW,GAAGH,MAAM,CAACI,IAAP,CAAYV,IAAZ,CAAiB,CAAjB,CAApB;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAW,CAAC,CAAD,CAAvB;AACA,cAAMT,IAAI,GAAG;AACXF,UAAAA,EAAE,EAAEW,WAAW,CAAC,CAAD,CADJ;AAEXJ,UAAAA,IAAI,EAAEI,WAAW,CAAC,CAAD,CAFN;AAGXI,UAAAA,QAAQ,EAAEJ,WAAW,CAAC,CAAD,CAHV;AAIXK,UAAAA,OAAO,EAAG,GAAEL,WAAW,CAAC,CAAD,CAAI,KAAIA,WAAW,CAAC,CAAD,CAAI,KAAIA,WAAW,CAAC,CAAD,CAAI,KAAIA,WAAW,CAAC,CAAD,CAAI,KAAIA,WAAW,CAAC,CAAD,CAAI;AAJ5F,SAAb;AAMA,cAAMR,KAAK,GAAGK,MAAM,CAACI,IAAP,CAAYT,KAAZ,CAAkBc,GAAlB,CAAuBC,IAAD,KAAW;AAC7ClB,UAAAA,EAAE,EAAEkB,IAAI,CAAC,CAAD,CADqC;AAE7CC,UAAAA,KAAK,EAAED,IAAI,CAAC,CAAD,CAFkC;AAG7CE,UAAAA,SAAS,EAAEF,IAAI,CAAC,CAAD,CAH8B;AAI7CG,UAAAA,QAAQ,EAAEH,IAAI,CAAC,CAAD,CAJ+B;AAK7CI,UAAAA,SAAS,EAAEJ,IAAI,CAAC,CAAD;AAL8B,SAAX,CAAtB,CAAd;AAOA,aAAKK,QAAL,CAAc;AAAErB,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAd;AACD;AACF,KAtBD,CAsBE,OAAOqB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDU,KAAnD;AACD;AACF;;AAnD0B;;AAsD7B,eAAe7B,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport axios from \"axios\";\n\nclass Door extends Component {\n  userId = this.props.match.params.id;\n  state = {\n    door: {},\n    users: [],\n  };\n  componentDidMount() {\n    this.fetchDoorData();\n  }\n  render() {\n    return (\n      <div className=\"card text-white bg-dark mb-3\">\n        <div className=\"card-header\">{this.state.door.name}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">ID: {this.state.door.id}</h5>\n          <p className=\"card-text\">\n            Sensor UUID: {this.state.door.id}\n            Address: {this.state.door.id}\n            Date Tsxcfsime: {this.state.door.id}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  async fetchDoorData() {\n    try {\n      const result = await axios.get(\n        `http://127.0.0.1:5000/doors/${this.userId}`\n      );\n      if (result.status === 200) {\n        const currentDoor = result.data.door[0];\n        console.log(currentDoor[0]);\n        const door = {\n          id: currentDoor[0],\n          name: currentDoor[1],\n          dateTime: currentDoor[2],\n          address: `${currentDoor[4]}, ${currentDoor[5]}, ${currentDoor[6]}, ${currentDoor[7]}, ${currentDoor[8]}`,\n        };\n        const users = result.data.users.map((user) => ({\n          id: user[0],\n          email: user[1],\n          firstName: user[2],\n          lastName: user[3],\n          createdAt: user[4],\n        }));\n        this.setState({ door, users });\n      }\n    } catch (error) {\n      console.log(\"Could not fetch doors at this time:\", error);\n    }\n  }\n}\n\nexport default Door;\n"]},"metadata":{},"sourceType":"module"}