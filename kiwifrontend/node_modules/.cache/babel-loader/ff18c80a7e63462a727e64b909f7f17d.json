{"ast":null,"code":"var _jsxFileName = \"/Users/Haider/Desktop/react-projects/KIWI/kiwifrontend/src/components/door.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Door extends Component {\n  constructor() {\n    super(...arguments);\n    this.userId = this.props.match.params.id;\n    this.state = {\n      door: {},\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDoorData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.match.params.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  async fetchDoorData() {\n    try {\n      const result = await axios.get(`http://127.0.0.1:5000/doors/${this.userId}`);\n\n      if (result.status === 200) {\n        console.log(result.data);\n        const currentDoor = result.data.door.map(door => ({\n          id: door[0],\n          name: door[1],\n          dateTime: door[2],\n          address: `${door[4]}, ${door[5]}, ${door[6]}, ${door[7]}, ${door[8]}`\n        }));\n        const currentUsers = result.data.users.map(user => ({\n          id: user[0],\n          email: user[1],\n          firstName: user[2],\n          lastName: user[3],\n          createdAt: user[4]\n        }));\n        this.setState({\n          door: currentDoor,\n          users: currentUsers\n        });\n      }\n    } catch (error) {\n      console.log(\"Could not fetch doors at this time:\", error);\n    }\n  }\n\n}\n\nexport default Door;","map":{"version":3,"sources":["/Users/Haider/Desktop/react-projects/KIWI/kiwifrontend/src/components/door.jsx"],"names":["React","Component","axios","Door","userId","props","match","params","id","state","door","users","componentDidMount","fetchDoorData","render","result","get","status","console","log","data","currentDoor","map","name","dateTime","address","currentUsers","user","email","firstName","lastName","createdAt","setState","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,MAD2B,GAClB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EADN;AAAA,SAG3BC,KAH2B,GAGnB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE;AAFD,KAHmB;AAAA;;AAO3BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBAAM,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEkB,QAAbK,aAAa,GAAG;AACpB,QAAI;AACF,YAAME,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAN,CAClB,+BAA8B,KAAKZ,MAAO,EADxB,CAArB;;AAGA,UAAIW,MAAM,CAACE,MAAP,KAAkB,GAAtB,EAA2B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,IAAnB;AACA,cAAMC,WAAW,GAAGN,MAAM,CAACK,IAAP,CAAYV,IAAZ,CAAiBY,GAAjB,CAAsBZ,IAAD,KAAW;AAClDF,UAAAA,EAAE,EAAEE,IAAI,CAAC,CAAD,CAD0C;AAElDa,UAAAA,IAAI,EAAEb,IAAI,CAAC,CAAD,CAFwC;AAGlDc,UAAAA,QAAQ,EAAEd,IAAI,CAAC,CAAD,CAHoC;AAIlDe,UAAAA,OAAO,EAAG,GAAEf,IAAI,CAAC,CAAD,CAAI,KAAIA,IAAI,CAAC,CAAD,CAAI,KAAIA,IAAI,CAAC,CAAD,CAAI,KAAIA,IAAI,CAAC,CAAD,CAAI,KAAIA,IAAI,CAAC,CAAD,CAAI;AAJlB,SAAX,CAArB,CAApB;AAMA,cAAMgB,YAAY,GAAGX,MAAM,CAACK,IAAP,CAAYT,KAAZ,CAAkBW,GAAlB,CAAuBK,IAAD,KAAW;AACpDnB,UAAAA,EAAE,EAAEmB,IAAI,CAAC,CAAD,CAD4C;AAEpDC,UAAAA,KAAK,EAAED,IAAI,CAAC,CAAD,CAFyC;AAGpDE,UAAAA,SAAS,EAAEF,IAAI,CAAC,CAAD,CAHqC;AAIpDG,UAAAA,QAAQ,EAAEH,IAAI,CAAC,CAAD,CAJsC;AAKpDI,UAAAA,SAAS,EAAEJ,IAAI,CAAC,CAAD;AALqC,SAAX,CAAtB,CAArB;AAOA,aAAKK,QAAL,CAAc;AAAEtB,UAAAA,IAAI,EAAEW,WAAR;AAAqBV,UAAAA,KAAK,EAAEe;AAA5B,SAAd;AACD;AACF,KArBD,CAqBE,OAAOO,KAAP,EAAc;AACdf,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDc,KAAnD;AACD;AACF;;AAvC0B;;AA0C7B,eAAe9B,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport axios from \"axios\";\n\nclass Door extends Component {\n  userId = this.props.match.params.id;\n\n  state = {\n    door: {},\n    users: [],\n  };\n  componentDidMount() {\n    this.fetchDoorData();\n  }\n  render() {\n    return <div>{this.props.match.params.id}</div>;\n  }\n\n  async fetchDoorData() {\n    try {\n      const result = await axios.get(\n        `http://127.0.0.1:5000/doors/${this.userId}`\n      );\n      if (result.status === 200) {\n        console.log(result.data);\n        const currentDoor = result.data.door.map((door) => ({\n          id: door[0],\n          name: door[1],\n          dateTime: door[2],\n          address: `${door[4]}, ${door[5]}, ${door[6]}, ${door[7]}, ${door[8]}`,\n        }));\n        const currentUsers = result.data.users.map((user) => ({\n          id: user[0],\n          email: user[1],\n          firstName: user[2],\n          lastName: user[3],\n          createdAt: user[4],\n        }));\n        this.setState({ door: currentDoor, users: currentUsers });\n      }\n    } catch (error) {\n      console.log(\"Could not fetch doors at this time:\", error);\n    }\n  }\n}\n\nexport default Door;\n"]},"metadata":{},"sourceType":"module"}